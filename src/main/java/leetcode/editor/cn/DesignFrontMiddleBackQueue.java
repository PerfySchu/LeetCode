//2023-11-28 19:06:26
//Á¨¨1670È¢ò
//ËØ∑‰Ω†ËÆæËÆ°‰∏Ä‰∏™ÈòüÂàóÔºåÊîØÊåÅÂú®ÂâçÔºå‰∏≠ÔºåÂêé‰∏â‰∏™‰ΩçÁΩÆÁöÑ push Âíå pop Êìç‰Ωú„ÄÇ
//
// ËØ∑‰Ω†ÂÆåÊàê FrontMiddleBack Á±ªÔºö
//
//
// FrontMiddleBack() ÂàùÂßãÂåñÈòüÂàó„ÄÇ
// void pushFront(int val) Â∞Ü val Ê∑ªÂä†Âà∞ÈòüÂàóÁöÑ ÊúÄÂâçÈù¢ „ÄÇ
// void pushMiddle(int val) Â∞Ü val Ê∑ªÂä†Âà∞ÈòüÂàóÁöÑ Ê≠£‰∏≠Èó¥ „ÄÇ
// void pushBack(int val) Â∞Ü val Ê∑ªÂä†Âà∞ÈòüÈáåÁöÑ ÊúÄÂêéÈù¢ „ÄÇ
// int popFront() Â∞Ü ÊúÄÂâçÈù¢ ÁöÑÂÖÉÁ¥†‰ªéÈòüÂàó‰∏≠Âà†Èô§Âπ∂ËøîÂõûÂÄºÔºåÂ¶ÇÊûúÂà†Èô§‰πãÂâçÈòüÂàó‰∏∫Á©∫ÔºåÈÇ£‰πàËøîÂõû -1 „ÄÇ
// int popMiddle() Â∞Ü Ê≠£‰∏≠Èó¥ ÁöÑÂÖÉÁ¥†‰ªéÈòüÂàó‰∏≠Âà†Èô§Âπ∂ËøîÂõûÂÄºÔºåÂ¶ÇÊûúÂà†Èô§‰πãÂâçÈòüÂàó‰∏∫Á©∫ÔºåÈÇ£‰πàËøîÂõû -1 „ÄÇ
// int popBack() Â∞Ü ÊúÄÂêéÈù¢ ÁöÑÂÖÉÁ¥†‰ªéÈòüÂàó‰∏≠Âà†Èô§Âπ∂ËøîÂõûÂÄºÔºåÂ¶ÇÊûúÂà†Èô§‰πãÂâçÈòüÂàó‰∏∫Á©∫ÔºåÈÇ£‰πàËøîÂõû -1 „ÄÇ
//
//
// ËØ∑Ê≥®ÊÑèÂΩìÊúâ ‰∏§‰∏™ ‰∏≠Èó¥‰ΩçÁΩÆÁöÑÊó∂ÂÄôÔºåÈÄâÊã©Èù†ÂâçÈù¢ÁöÑ‰ΩçÁΩÆËøõË°åÊìç‰Ωú„ÄÇÊØîÊñπËØ¥Ôºö
//
//
// Â∞Ü 6 Ê∑ªÂä†Âà∞ [1, 2, 3, 4, 5] ÁöÑ‰∏≠Èó¥‰ΩçÁΩÆÔºåÁªìÊûúÊï∞ÁªÑ‰∏∫ [1, 2, 6, 3, 4, 5] „ÄÇ
// ‰ªé [1, 2, 3, 4, 5, 6] ÁöÑ‰∏≠Èó¥‰ΩçÁΩÆÂºπÂá∫ÂÖÉÁ¥†ÔºåËøîÂõû 3 ÔºåÊï∞ÁªÑÂèò‰∏∫ [1, 2, 4, 5, 6] „ÄÇ
//
//
//
//
// Á§∫‰æã 1Ôºö
//
//
//ËæìÂÖ•Ôºö
//["FrontMiddleBackQueue", "pushFront", "pushBack", "pushMiddle", "pushMiddle",
//"popFront", "popMiddle", "popMiddle", "popBack", "popFront"]
//[[], [1], [2], [3], [4], [], [], [], [], []]
//ËæìÂá∫Ôºö
//[null, null, null, null, null, 1, 3, 4, 2, -1]
//
//Ëß£ÈáäÔºö
//FrontMiddleBackQueue q = new FrontMiddleBackQueue();
//q.pushFront(1);   // [1]
//q.pushBack(2);    // [1, 2]
//q.pushMiddle(3);  // [1, 3, 2]
//q.pushMiddle(4);  // [1, 4, 3, 2]
//q.popFront();     // ËøîÂõû 1 -> [4, 3, 2]
//q.popMiddle();    // ËøîÂõû 3 -> [4, 2]
//q.popMiddle();    // ËøîÂõû 4 -> [2]
//q.popBack();      // ËøîÂõû 2 -> []
//q.popFront();     // ËøîÂõû -1 -> [] ÔºàÈòüÂàó‰∏∫Á©∫Ôºâ
//
//
//
//
// ÊèêÁ§∫Ôºö
//
//
// 1 <= val <= 10‚Åπ
// ÊúÄÂ§öË∞ÉÁî® 1000 Ê¨° pushFrontÔºå pushMiddleÔºå pushBackÔºå popFrontÔºå popMiddle Âíå popBack „ÄÇ
//
//
//
// Related Topics ËÆæËÆ° ÈòüÂàó Êï∞ÁªÑ ÈìæË°® Êï∞ÊçÆÊµÅ üëç 79 üëé 0

package leetcode.editor.cn;

import java.util.ArrayDeque;
import java.util.Deque;

public class DesignFrontMiddleBackQueue{
    public static void main(String[] args){
        FrontMiddleBackQueue solution = new DesignFrontMiddleBackQueue().new FrontMiddleBackQueue();
    }
    //leetcode submit region begin(Prohibit modification and deletion)
class FrontMiddleBackQueue {
    Deque<Integer> left;
    Deque<Integer> right;
    public FrontMiddleBackQueue() {
        left = new ArrayDeque<>();
        right = new ArrayDeque<>();
    }

    public void pushFront(int val) {
        left.offerFirst(val);
        if (left.size() == right.size() + 2) {
            right.offerFirst(left.pollLast());
        }
    }

    public void pushMiddle(int val) {
        if (left.size() == right.size() + 1) {
            right.offerFirst(left.pollLast());
        }
        left.offerLast(val);
    }

    public void pushBack(int val) {
        right.offerLast(val);
        if (left.size() + 1 == right.size()) {
            left.offerLast(right.pollFirst());
        }
    }

    public int popFront() {
        if (left.isEmpty()) {
            return -1;
        }
        int val = left.pollFirst();
        if (left.size() + 1 == right.size()) {
            left.offerLast(right.pollFirst());
        }
        return val;
    }

    public int popMiddle() {
        if (left.isEmpty()) {
            return -1;
        }
        int val = left.pollLast();
        if (left.size() + 1 == right.size()) {
            left.offerLast(right.pollFirst());
        }
        return val;
    }

    public int popBack() {
        if (left.isEmpty()) {
            return -1;
        }
        int val = 0;
        if (right.isEmpty()) {
            val = left.pollLast();
        }else {
            val = right.pollLast();
            if (left.size() == right.size()+2) {
                right.offerFirst(left.pollLast());
            }
        }
        return val;
    }
}

/**
 * Your FrontMiddleBackQueue object will be instantiated and called as such:
 * FrontMiddleBackQueue obj = new FrontMiddleBackQueue();
 * obj.pushFront(val);
 * obj.pushMiddle(val);
 * obj.pushBack(val);
 * int param_4 = obj.popFront();
 * int param_5 = obj.popMiddle();
 * int param_6 = obj.popBack();
 */
//leetcode submit region end(Prohibit modification and deletion)

}