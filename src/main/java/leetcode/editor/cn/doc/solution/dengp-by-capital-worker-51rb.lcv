# 方法一：找规律

根据题意，我们先找到每个开关影响的灯
![image.png](https://pic.leetcode-cn.com/1663199774-ViXZgK-image.png)
如图所示，两个虚框的灯的状态完全一致，因此我们任意取一盏灯`i`，则`i`的状态和`i + 6`的状态完全一致，所以灯的状态的周期`T = 6`

**因此我们只需要观察前六盏灯的状态。**
![image.png](https://pic.leetcode-cn.com/1663199810-cSHGQC-image.png)
我们设六盏灯的编号为`6k+1`、`6k+2`、`6k+3`、`6k+4`、`6k+5`、`6k+6`，则
- `6k+1`会受到`1`、`3`、`4`开关的影响
- `6k+2`会受到`1`、`2`开关的影响
- `6k+3`会受到`1`、`3`开关的影响
- `6k+4`会受到`1`、`2`、`4`开关的影响
- `6k+5`会受到`1`、`3`开关的影响
- `6k+6`会受到`1`、`2`开关的影响

由于`6k+2`和`6k+6`都受到`1`、`2`开关的影响，因此两盏灯的状态一致
由于`6k+3`和`6k+5`都受到`1`、`3`开关的影响，因此两盏灯的状态一致

**因此我们只需要观察前4盏灯的状态。**

进一步，我们设按下4种开关的次数分别为`a`、`b`、`c`、`d`，由于偶数次按压相当于没按，所以有
①`6k+1`的状态为`(a + c + d) % 2`
②`6k+2`的状态为`(a + b) % 2`
③`6k+3`的状态为`(a + c) % 2`
④`6k+4`的状态为`(a + b + d) % 2`

由于①和③都受到`1`、`3`开关的影响，所以若①③状态相同，则`d`必然为偶数；若①③状态不同，则`d`必然为奇数

由于②和④都受到`1`、`2`开关的影响，并且④和`d`有关系，所以若`d`为偶数，则②④状态相同；若`d`为奇数，则②④状态不同

所以我们可以通过①②③的状态来确定④的状态

**因此我们只需要观察前3盏灯的状态。**

设前三盏灯开始的状态为`111`，我们最开始枚举状态，最多也就8种（每个灯只有亮和不亮）
![image.png](https://pic.leetcode-cn.com/1663212415-WztOlf-image.png)

以此类推，`011`可以由`111`获得，因此当`presses >= 3`时 可以获得`8`种

**综上**：
当`n == 1`时，开关1、3、4对其造成影响，也只有开和关两种状态
当`n == 2`时，按照推理`111`的状态推理`11`，按一次有`3`种，按`2`次及以上有`4`种。
当`n == 3`时，按一次有`4`种，按`2`次及以上有`7`种,`3`次及以上有`8`种。
**代码如下**

* java

```java
public int flipLights(int n, int presses) {
    //不按开关
    if (presses == 0) {
        return 1;
    }
    //特殊情况处理
    if (n == 1) {
        return 2;
    } else if (n == 2) {
        //特殊情况
        return presses == 1 ? 3 : 4;
    } else {
        //n >= 3
        return presses == 1 ? 4 : presses == 2 ? 7 : 8;
    }
}
```

**复杂度分析**
时间复杂度：O(1)
空间复杂度：O(1)
![image.png](https://pic.leetcode-cn.com/1663201198-NnoSCp-image.png)

写题解不易，**如果对您有帮助，记得关注 + 点赞 + 收藏呦！！！**
**每天都会更新每日一题题解，大家加油！！**
